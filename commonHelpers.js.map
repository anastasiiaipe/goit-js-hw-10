{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst startBtn = document.querySelector('button[data-start]');\nstartBtn.disabled = true;\n\nconst days = document.querySelector('span[data-days]');\nconst hours = document.querySelector('span[data-hours]');\nconst minutes = document.querySelector('span[data-minutes]');\nconst seconds = document.querySelector('span[data-seconds]');\n\nlet userSelectedDate;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const selectedDateInMS = selectedDates[0].getTime();\n    if (selectedDateInMS > Date.now()) {\n      userSelectedDate = selectedDateInMS;\n      startBtn.disabled = false;\n    } else {\n      iziToast.error({\n        message: 'Please, choose a date in the future',\n        messageColor: '#FFF',\n        messageSize: '20px',\n        backgroundColor: '#f54e59',\n        position: 'topRight',\n      });\n    }\n  },\n};\n\nflatpickr('#datetime-picker', options);\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nfunction startTimer() {\n  startBtn.disabled = true;\n\n  let timerTime = 0;\n\n  const intervalId = setInterval(() => {\n    timerTime = userSelectedDate - Date.now();\n\n    if (timerTime > 0) {\n      let timerTimeObject = convertMs(timerTime);\n\n      days.textContent = addLeadingZero(timerTimeObject.days);\n      hours.textContent = addLeadingZero(timerTimeObject.hours);\n      minutes.textContent = addLeadingZero(timerTimeObject.minutes);\n      seconds.textContent = addLeadingZero(timerTimeObject.seconds);\n    } else {\n      clearInterval(intervalId);\n    }\n  }, 1000);\n}\n\nstartBtn.addEventListener('click', startTimer);\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n"],"names":["startBtn","days","hours","minutes","seconds","userSelectedDate","options","selectedDates","selectedDateInMS","iziToast","flatpickr","addLeadingZero","value","startTimer","timerTime","intervalId","timerTimeObject","convertMs","ms"],"mappings":"4xBAMA,MAAMA,EAAW,SAAS,cAAc,oBAAoB,EAC5DA,EAAS,SAAW,GAEpB,MAAMC,EAAO,SAAS,cAAc,iBAAiB,EAC/CC,EAAQ,SAAS,cAAc,kBAAkB,EACjDC,EAAU,SAAS,cAAc,oBAAoB,EACrDC,EAAU,SAAS,cAAc,oBAAoB,EAE3D,IAAIC,EAEJ,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,MAAMC,EAAmBD,EAAc,CAAC,EAAE,QAAO,EAC7CC,EAAmB,KAAK,OAC1BH,EAAmBG,EACnBR,EAAS,SAAW,IAEpBS,EAAS,MAAM,CACb,QAAS,sCACT,aAAc,OACd,YAAa,OACb,gBAAiB,UACjB,SAAU,UAClB,CAAO,CAEJ,CACH,EAEAC,EAAU,mBAAoBJ,CAAO,EAErC,SAASK,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,SAASC,GAAa,CACpBb,EAAS,SAAW,GAEpB,IAAIc,EAAY,EAEhB,MAAMC,EAAa,YAAY,IAAM,CAGnC,GAFAD,EAAYT,EAAmB,KAAK,MAEhCS,EAAY,EAAG,CACjB,IAAIE,EAAkBC,EAAUH,CAAS,EAEzCb,EAAK,YAAcU,EAAeK,EAAgB,IAAI,EACtDd,EAAM,YAAcS,EAAeK,EAAgB,KAAK,EACxDb,EAAQ,YAAcQ,EAAeK,EAAgB,OAAO,EAC5DZ,EAAQ,YAAcO,EAAeK,EAAgB,OAAO,CAClE,MACM,cAAcD,CAAU,CAE3B,EAAE,GAAI,CACT,CAEAf,EAAS,iBAAiB,QAASa,CAAU,EAE7C,SAASI,EAAUC,EAAI,CAQrB,MAAMjB,EAAO,KAAK,MAAMiB,EAAK,KAAG,EAE1BhB,EAAQ,KAAK,MAAOgB,EAAK,MAAO,IAAI,EAEpCf,EAAU,KAAK,MAAQe,EAAK,MAAO,KAAQ,GAAM,EAEjDd,EAAU,KAAK,MAASc,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAjB,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}